input { 
  file {
    path => "/app/weblog.csv"  # путь к csv
    start_position => "beginning"
    sincedb_path => "/dev/null"  # чтобы файл читался каждый раз с начала
  }
}

filter {
  
  # Фильтр csv для обработки корректных строк
  csv {
    separator => ","
    columns => ["IP", "Time", "Request", "Status"]
  }

  # Фильтр grok для удаления мусорных строк, строка должна начинаться с IP
  grok {
    match => { "message" => "^%{IPV4:IP}," }
    target => "IP_match"  # значение по маске пишем в новый атрибут
  }

  # Удаление «мусора» по тегу "_grokparsefailure"
  if "_grokparsefailure" in [tags] {
    drop { }
  }

  # Удаление квадратных скобок из поля Time
  mutate {
    gsub => ["Time", "[\[\]]", ""]
  }

  # Разбор запроса на метод, URL и версию HTTP
  grok {
    match => { "Request" => "%{WORD:Method} %{URIPATHPARAM:URL} HTTP/%{NUMBER:http_version}" }
  }

  # Преобразование времени в формат временной метки Logstash
  date {
    match => ["Time", "dd/MMM/yyyy:HH:mm:ss"]
    target => "@timestamp"  # перезапись @timestamp (по нему будем строить графики)
  }

  # Конвертация поля Status в целое число и удаление ненужных полей
  mutate {
    convert => {
      "Status" => "integer"
    }
    remove_field => ["Request"]
    remove_field => ["IP_match"]
  }
  
  # Ограничение обработки до первых 10 строк
  # ruby {
  #   code => '
  #     if !defined?(@counter)
  #       @counter = 0
  #     end
  #     @counter += 1
  #     if @counter > 5
  #       event.cancel
  #     end
  #   '
  # }

}

output {
  # отправка данных в elasticsearch
  elasticsearch {
    hosts => ["http://51.250.45.90:9200"]
  }
  # ИЛИ отправка данных в консоль
  # stdout { codec => rubydebug }
}